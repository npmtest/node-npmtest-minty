{"/home/travis/build/npmtest/node-npmtest-minty/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-minty/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_minty */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-minty/lib.npmtest_minty.js":{"path":"/home/travis/build/npmtest/node-npmtest-minty/lib.npmtest_minty.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":56}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_minty */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_minty = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_minty = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-minty/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-minty/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":49}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":63},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-minty && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_minty */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_minty","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_minty.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_minty.rollup.js'] =","            local.assetsDict['/assets.npmtest_minty.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_minty.__dirname + '/lib.npmtest_minty.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":1},"b":{},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"file","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":20}}},"2":{"name":"wrap","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":20}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":9},"end":{"line":36,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":25}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":57}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":17}},"8":{"start":{"line":15,"column":0},"end":{"line":22,"column":1}},"9":{"start":{"line":16,"column":2},"end":{"line":16,"column":50}},"10":{"start":{"line":17,"column":2},"end":{"line":17,"column":32}},"11":{"start":{"line":18,"column":2},"end":{"line":18,"column":30}},"12":{"start":{"line":19,"column":2},"end":{"line":19,"column":41}},"13":{"start":{"line":20,"column":2},"end":{"line":20,"column":38}},"14":{"start":{"line":21,"column":2},"end":{"line":21,"column":9}},"15":{"start":{"line":29,"column":0},"end":{"line":40,"column":1}},"16":{"start":{"line":30,"column":2},"end":{"line":30,"column":33}},"17":{"start":{"line":31,"column":2},"end":{"line":31,"column":39}},"18":{"start":{"line":32,"column":2},"end":{"line":32,"column":37}},"19":{"start":{"line":33,"column":2},"end":{"line":33,"column":30}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":46}},"21":{"start":{"line":35,"column":2},"end":{"line":35,"column":52}},"22":{"start":{"line":36,"column":2},"end":{"line":39,"column":4}},"23":{"start":{"line":37,"column":4},"end":{"line":37,"column":55}},"24":{"start":{"line":38,"column":4},"end":{"line":38,"column":39}},"25":{"start":{"line":42,"column":0},"end":{"line":42,"column":18}},"26":{"start":{"line":43,"column":0},"end":{"line":43,"column":18}},"27":{"start":{"line":46,"column":0},"end":{"line":46,"column":23}}},"branchMap":{},"code":["const parser = require('./lib/parser.js').parser;","const fs = require('fs');","const ruler = require('./lib/createLineRules.js').ruler;","const inject = require('./lib/injector.js');","const run = require('./lib/run.js');","const anonFunc = require('./lib/tools.js').anonFuncCheck;","const minty = {};","","","/**","* reads the file the user provides, creates an abstract syntax tree, creates rules, injects monitoring code based on rules, generates HTML file for user","* @param {string} absolute path to file that will be analyze","**/","","function file(path) {","  const JSTEXT = fs.readFileSync(path).toString();","  const parsed = parser(JSTEXT);","  const rules = ruler(parsed);","  const injected = inject(rules, JSTEXT);","  run.runFile(injected, path, JSTEXT);","  return;","}","","/**","* turns function to a string, turns function into abstract syntax tree, creates rules to inject monitoring code, and returns function that will output HTML file each time it is called","* @param {function}","* @returns {function} each time returned function is executed, an HTML visualization will be created","**/","function wrap(func) {","  const JSTEXT = func.toString();","  const namedJsFunc = anonFunc(JSTEXT);","  const parsed = parser(namedJsFunc);","  const rules = ruler(parsed);","  const injected = inject(rules, namedJsFunc);","  const mintified = run.wrap(injected, namedJsFunc);","  return function() {","    const args = Array.prototype.slice.call(arguments);","    return mintified.apply(null, args);","  };","}","","minty.file = file;","minty.wrap = wrap;","","","module.exports = minty;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"42":1,"43":1,"46":1}},"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/lib/parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/lib/parser.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":16,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1},"b":{"1":[0,0],"2":[0,0],"3":[16,12]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":16,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":19},"end":{"line":20,"column":42}}},"2":{"name":"(anonymous_2)","line":30,"loc":{"start":{"line":30,"column":36},"end":{"line":30,"column":52}}},"3":{"name":"(anonymous_3)","line":39,"loc":{"start":{"line":39,"column":31},"end":{"line":39,"column":47}}},"4":{"name":"(anonymous_4)","line":48,"loc":{"start":{"line":48,"column":31},"end":{"line":48,"column":47}}},"5":{"name":"(anonymous_5)","line":57,"loc":{"start":{"line":57,"column":31},"end":{"line":57,"column":47}}},"6":{"name":"(anonymous_6)","line":117,"loc":{"start":{"line":117,"column":27},"end":{"line":117,"column":62}}},"7":{"name":"(anonymous_7)","line":146,"loc":{"start":{"line":146,"column":34},"end":{"line":146,"column":48}}},"8":{"name":"parser","line":156,"loc":{"start":{"line":156,"column":0},"end":{"line":156,"column":22}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":22}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":22}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":23}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":8}},"7":{"start":{"line":20,"column":0},"end":{"line":23,"column":2}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":49}},"9":{"start":{"line":22,"column":2},"end":{"line":22,"column":46}},"10":{"start":{"line":30,"column":0},"end":{"line":32,"column":2}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":54}},"12":{"start":{"line":31,"column":38},"end":{"line":31,"column":52}},"13":{"start":{"line":39,"column":0},"end":{"line":41,"column":2}},"14":{"start":{"line":40,"column":2},"end":{"line":40,"column":22}},"15":{"start":{"line":48,"column":0},"end":{"line":50,"column":2}},"16":{"start":{"line":49,"column":2},"end":{"line":49,"column":19}},"17":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"18":{"start":{"line":58,"column":2},"end":{"line":58,"column":51}},"19":{"start":{"line":58,"column":38},"end":{"line":58,"column":49}},"20":{"start":{"line":60,"column":0},"end":{"line":91,"column":2}},"21":{"start":{"line":117,"column":0},"end":{"line":141,"column":2}},"22":{"start":{"line":118,"column":2},"end":{"line":120,"column":3}},"23":{"start":{"line":119,"column":4},"end":{"line":119,"column":40}},"24":{"start":{"line":122,"column":2},"end":{"line":122,"column":65}},"25":{"start":{"line":126,"column":2},"end":{"line":140,"column":5}},"26":{"start":{"line":127,"column":4},"end":{"line":130,"column":7}},"27":{"start":{"line":131,"column":4},"end":{"line":139,"column":5}},"28":{"start":{"line":132,"column":6},"end":{"line":138,"column":9}},"29":{"start":{"line":133,"column":8},"end":{"line":133,"column":32}},"30":{"start":{"line":134,"column":8},"end":{"line":134,"column":32}},"31":{"start":{"line":135,"column":8},"end":{"line":135,"column":39}},"32":{"start":{"line":136,"column":8},"end":{"line":137,"column":24}},"33":{"start":{"line":146,"column":0},"end":{"line":148,"column":3}},"34":{"start":{"line":147,"column":2},"end":{"line":147,"column":78}},"35":{"start":{"line":156,"column":0},"end":{"line":167,"column":1}},"36":{"start":{"line":157,"column":2},"end":{"line":157,"column":24}},"37":{"start":{"line":159,"column":2},"end":{"line":161,"column":5}},"38":{"start":{"line":163,"column":2},"end":{"line":165,"column":5}},"39":{"start":{"line":164,"column":4},"end":{"line":164,"column":11}},"40":{"start":{"line":166,"column":2},"end":{"line":166,"column":26}},"41":{"start":{"line":169,"column":0},"end":{"line":173,"column":2}}},"branchMap":{"1":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"2":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"3":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":55},"end":{"line":147,"column":67}},{"start":{"line":147,"column":71},"end":{"line":147,"column":75}}]}},"code":["'use strict';","","const esprima = require('esprima');","const esquery = require('esquery');","const parseutils = {};","// const fs = require('fs');","","parseutils.cache = {};","parseutils.tokens = [];","","let ast;","","/**"," * function to parse through ast and return desired information based off search parameter"," * @param {string} string - search term, i.e. '[attr=\"foo\"]'"," * @param {object} AST - AST that will be searched. Did not call param 'ast' as"," *              that variable has been used already"," * @returns {array} - array of matching AST nodes, each of which is an Object"," **/","parseutils.query = function (string, AST) {","  const parseInformation = esquery.parse(string);","  return esquery.match(AST, parseInformation);","};","","/**","* function parses ast and finds all function declarations, adding parameters","* @param {object} node - an AST node, representing a function, whose parameters we want to grab","* @returns {array} - function parameters","**/","parseutils.functionParameterParse = function (node) {","  return node.params.map(paramsObj => paramsObj.name);","};","","/**","* function parses ast and finds all function declarations, adding names","* @param {object} node - an AST node, representing a function, whose name we want to grab","* @returns {string} - function name","**/","parseutils.functionNameParse = function (node) {","  return node.id.name;","};","","/**","* function parses ast and finds all variable declarations, determining how they were declared (let, var, const)","* @param {object} node - an AST node, representing a varable, whose declaration we want to grab","* @returns {string} - variable declaration of let, var, or const","**/","parseutils.variableKindParse = function (node) {","  return node.kind;","};","","/**","* function parses ast and finds all variable names","* @param {object} node - an AST node, representing a variable, whose name we want to grab","* @returns {string} - variable name","**/","parseutils.variableNameParse = function (node) {","  return node.declarations.map(dec => dec.id.name);","};","const types = [","  { type: 'BreakStatement', callbacks: null },","  { type: 'ReturnStatement', callbacks: null },","  { type: 'YieldExpression', callbacks: null },","  {","    type: 'FunctionDeclaration',","    callbacks: [[parseutils.functionParameterParse, 'parameters'],","      [parseutils.functionNameParse, 'name']],","  },","  {","    type: 'FunctionExpression',","    callbacks: [[parseutils.functionParameterParse, 'parameters']],","  },","  {","    type: 'ArrowFunctionExpression',","    callbacks: [[parseutils.functionParameterParse, 'parameters']],","  },","  { type: 'SwitchCase', callbacks: null },","  {","    type: 'VariableDeclaration',","    callbacks: [[parseutils.variableKindParse, 'kind'],","      [parseutils.variableNameParse, 'variables']],","  },","  { type: 'CallExpression', callbacks: null },","  { type: 'SwitchStatement', callbacks: null },","  { type: 'ForStatement', callbacks: null },","  { type: 'ForInStatement', callbacks: null },","  { type: 'ForOfStatement', callbacks: null },","  { type: 'WhileStatement', callbacks: null },","  { type: 'DoWhileStatement', callbacks: null },","  { type: 'IfStatement', callbacks: null },","];","","","/**","* function parses ast and finds all global variables not declared with let, var, or const","* @param {object} node - an AST node, representing a program, whose globals we want to grab","* @deprecated since 0.1.5, force 'use strict';","* @returns {string} - variable name","**/","// parseutils.assignmentExpParse = function (node) {","//   return node.left.name;","// };","","/**","* Object contains all of the AST node types we parse. To add a new node type:","* @param {string} type - selector for the node type. See https://www.npmjs.com/package/esquery.","* @param {array} callbacks - an array of callbacks, containing the following:","* @param {array} - A single array containing a single callback, with","* @param (function} - the callback function to run, in the 0th index of the array","* @param {string} - the key in which you want to store the callback's return, in the 1st index of the array)","*/","/**"," * function parses ast and finds all searchString nodes, runs callbacks after"," * @param searchString - finds all nodes with this string via esquery"," * @param callbacks - array with nested arrays [[function, logName], ...], logs extra parameters"," **/","parseutils.parseFunction = function (searchString, callbacks) {","  if (!parseutils.cache[searchString]) {","    parseutils.cache[searchString] = [];","  }","","  const output = parseutils.query(`[type=${searchString}]`, ast);","","  // Tempting to use map and concat but seems like push is faster","  //  http://jsperf.com/multi-array-concat/7","  output.forEach(node => {","    parseutils.cache[searchString].push({","      startLine: node.loc.start.line,","      endLine: node.loc.end.line,","    });","    if (callbacks) {","      callbacks.forEach(cbArray => {","        const name = cbArray[1];","        const func = cbArray[0];","        const extraOutput = func(node);","        parseutils.cache[searchString][parseutils.cache[searchString].length - 1][name]","          = extraOutput;","      });","    }","  });","};","","/**","* function loops through the types object and returns an array of callbacks to be run, when the AST is parsed","**/","parseutils.asyncTasks = types.map(function (el) {","  return parseutils.parseFunction.bind(this, el.type, (el.callbacks || null));","});","","/**","* function parses a Javascript file and returns an object containing interesting nodes and their details,","* by looping through it with the {@link #parseutils.asyncTasks} array","* @param {string} text - the text of the file to analyze","* @returns {object} - cache object","**/","function parser(text) {","  parseutils.cache = {};","","  ast = esprima.parse(text, {","    loc: true,","  });","","  parseutils.asyncTasks.forEach(func => {","    func();","  });","  return parseutils.cache;","}","","module.exports = {","  parser,","  parseutils,","  types,","};",""],"l":{"3":1,"4":1,"5":1,"8":1,"9":1,"11":1,"20":1,"21":0,"22":0,"30":1,"31":0,"39":1,"40":0,"48":1,"49":0,"57":1,"58":0,"60":1,"117":1,"118":0,"119":0,"122":0,"126":0,"127":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"146":1,"147":16,"156":1,"157":0,"159":0,"163":0,"164":0,"166":0,"169":1}},"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/lib/createLineRules.js":{"path":"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/lib/createLineRules.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0,0,0,0,0,0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"addLines","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":53}}},"2":{"name":"addVariables","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":45}}},"3":{"name":"addScopeName","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":45}}},"4":{"name":"ruler","line":107,"loc":{"start":{"line":107,"column":0},"end":{"line":107,"column":23}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":30,"column":0},"end":{"line":47,"column":1}},"3":{"start":{"line":31,"column":2},"end":{"line":31,"column":16}},"4":{"start":{"line":32,"column":2},"end":{"line":32,"column":14}},"5":{"start":{"line":33,"column":2},"end":{"line":46,"column":5}},"6":{"start":{"line":34,"column":4},"end":{"line":34,"column":36}},"7":{"start":{"line":35,"column":4},"end":{"line":35,"column":32}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":63}},"9":{"start":{"line":36,"column":34},"end":{"line":36,"column":63}},"10":{"start":{"line":37,"column":4},"end":{"line":37,"column":85}},"11":{"start":{"line":37,"column":45},"end":{"line":37,"column":85}},"12":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"13":{"start":{"line":39,"column":6},"end":{"line":39,"column":79}},"14":{"start":{"line":41,"column":4},"end":{"line":41,"column":59}},"15":{"start":{"line":41,"column":32},"end":{"line":41,"column":59}},"16":{"start":{"line":42,"column":4},"end":{"line":42,"column":81}},"17":{"start":{"line":42,"column":43},"end":{"line":42,"column":81}},"18":{"start":{"line":43,"column":4},"end":{"line":45,"column":5}},"19":{"start":{"line":44,"column":6},"end":{"line":44,"column":75}},"20":{"start":{"line":55,"column":0},"end":{"line":70,"column":1}},"21":{"start":{"line":56,"column":2},"end":{"line":68,"column":5}},"22":{"start":{"line":57,"column":4},"end":{"line":57,"column":51}},"23":{"start":{"line":58,"column":4},"end":{"line":58,"column":45}},"24":{"start":{"line":58,"column":25},"end":{"line":58,"column":45}},"25":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"26":{"start":{"line":60,"column":6},"end":{"line":60,"column":51}},"27":{"start":{"line":62,"column":4},"end":{"line":67,"column":5}},"28":{"start":{"line":63,"column":6},"end":{"line":66,"column":8}},"29":{"start":{"line":90,"column":0},"end":{"line":104,"column":1}},"30":{"start":{"line":92,"column":2},"end":{"line":103,"column":5}},"31":{"start":{"line":93,"column":4},"end":{"line":93,"column":51}},"32":{"start":{"line":94,"column":4},"end":{"line":102,"column":5}},"33":{"start":{"line":95,"column":6},"end":{"line":95,"column":30}},"34":{"start":{"line":96,"column":11},"end":{"line":102,"column":5}},"35":{"start":{"line":97,"column":6},"end":{"line":101,"column":7}},"36":{"start":{"line":98,"column":8},"end":{"line":98,"column":61}},"37":{"start":{"line":100,"column":8},"end":{"line":100,"column":42}},"38":{"start":{"line":107,"column":0},"end":{"line":138,"column":1}},"39":{"start":{"line":108,"column":2},"end":{"line":108,"column":24}},"40":{"start":{"line":109,"column":2},"end":{"line":136,"column":5}},"41":{"start":{"line":110,"column":4},"end":{"line":135,"column":5}},"42":{"start":{"line":114,"column":8},"end":{"line":114,"column":69}},"43":{"start":{"line":115,"column":8},"end":{"line":115,"column":14}},"44":{"start":{"line":120,"column":8},"end":{"line":120,"column":70}},"45":{"start":{"line":121,"column":8},"end":{"line":121,"column":59}},"46":{"start":{"line":122,"column":8},"end":{"line":122,"column":59}},"47":{"start":{"line":123,"column":8},"end":{"line":123,"column":14}},"48":{"start":{"line":125,"column":8},"end":{"line":125,"column":67}},"49":{"start":{"line":126,"column":8},"end":{"line":126,"column":59}},"50":{"start":{"line":127,"column":8},"end":{"line":127,"column":14}},"51":{"start":{"line":130,"column":8},"end":{"line":130,"column":69}},"52":{"start":{"line":131,"column":8},"end":{"line":131,"column":14}},"53":{"start":{"line":133,"column":8},"end":{"line":133,"column":70}},"54":{"start":{"line":134,"column":8},"end":{"line":134,"column":14}},"55":{"start":{"line":137,"column":2},"end":{"line":137,"column":22}},"56":{"start":{"line":140,"column":0},"end":{"line":140,"column":27}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"7":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"8":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"9":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"10":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"11":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":11},"end":{"line":96,"column":11}},{"start":{"line":96,"column":11},"end":{"line":96,"column":11}}]},"12":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":6},"end":{"line":97,"column":6}},{"start":{"line":97,"column":6},"end":{"line":97,"column":6}}]},"13":{"line":110,"type":"switch","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":28}},{"start":{"line":112,"column":6},"end":{"line":112,"column":29}},{"start":{"line":113,"column":6},"end":{"line":115,"column":14}},{"start":{"line":116,"column":6},"end":{"line":116,"column":33}},{"start":{"line":117,"column":6},"end":{"line":117,"column":32}},{"start":{"line":118,"column":6},"end":{"line":118,"column":37}},{"start":{"line":119,"column":6},"end":{"line":123,"column":14}},{"start":{"line":124,"column":6},"end":{"line":127,"column":14}},{"start":{"line":128,"column":6},"end":{"line":128,"column":28}},{"start":{"line":129,"column":6},"end":{"line":131,"column":14}},{"start":{"line":132,"column":6},"end":{"line":134,"column":14}}]}},"code":["'use strict';","","let lineRules = {","  ruler,","  addVariables,","  addLines,","  addScopeName,","};","","/**","* building up the lineActivity object - keys are line numbers and values are objects- looks like { rulesFound: [ { action: 'START or END', rule: 'SCOPE', type: 'SwitchCase' } ] }","* @param {type of statement/expression/function declaration} type","* @param {a string like 'swap', 'void' - it avoids inserting monitoring code in objects, multi-line function call, 'scope'} rule","* @param {the parsed data we got from the abstract syntax tree for each of the type (ForStatement, FunctionDeclaration, ArrowFunctionExpression, SwitchCase, VariableDeclaration, etc) - an array of objects that has the start and end lines for each of the types. if its a var declaration will also have kind and variables as properties.","example:","[{ startLine: 3,","    endLine: 3,","    kind: 'var',","    variables: [ 'one', 'two', 'three' ] },","    { startLine: 4,","    endLine: 4,","    kind: 'var',","    variables: [ 'four', 'five' ] }]"," } cluster","","* lineActivity is globally defined - thats why we can add properties to the lineActivity object that we defined in ruler","**/","","// start line is group.startline - 1 because when we read the text, we are splitting the lines of text by \\n and so now its an array","function addLines(type, rule, cluster, lineActivity) {","  let startLine;","  let endLine;","  cluster.forEach(group => {","    startLine = group.startLine - 1;","    endLine = group.endLine - 1;","    if (!lineActivity[startLine]) lineActivity[startLine] = {};","    if (!lineActivity[startLine].rulesFound) lineActivity[startLine].rulesFound = [];","    if (rule) {","      lineActivity[startLine].rulesFound.push({ action: 'START', rule, type });","    }","    if (!lineActivity[endLine]) lineActivity[endLine] = {};","    if (!lineActivity[endLine].rulesFound) lineActivity[endLine].rulesFound = [];","    if (rule) {","      lineActivity[endLine].rulesFound.push({ action: 'END', rule, type });","    }","  });","}","","/**","* addVariables is adding more properties to the nested objects in the lineActivity objects","* checking if any element(the element is an object) in the cluster array are parameters for a function - if there are we are adding a key called parameters to line.variable","*if there are variables then we are adding a name and kind key called variables to the line.variables object","**/","","function addVariables(cluster, lineActivity) {","  cluster.forEach(group => {","    const line = lineActivity[group.startLine - 1];","    if (!line.variables) line.variables = {};","    if (group.parameters) {","      line.variables.parameters = group.parameters;","    }","    if (group.variables) {","      line.variables.variables = {","        names: group.variables,","        kind: group.kind,","      };","    }","  });","","}","","/**","  @param {the parsed data we got from the abstract syntax tree for each of the type (ForStatement, FunctionDeclaration, ArrowFunctionExpression, SwitchCase, VariableDeclaration, etc) - an array of objects that has the start and end lines for each of the types. if its a var declaration will also have kind and variables as properties.","  example:","  [{ startLine: 3,","      endLine: 3,","      kind: 'var',","      variables: [ 'one', 'two', 'three' ] },","      { startLine: 4,","      endLine: 4,","      kind: 'var',","      variables: [ 'four', 'five' ] }]","   } cluster","","**/","","/* function declaration - this will have a name so the function name will be set to line.SCOPE"," function expression - var func = function() {} this function doesnt have a name, but we are getting the variable name and setting that as its scope name","*/","function addScopeName(cluster, lineActivity) {","","  cluster.forEach(group => {","    const line = lineActivity[group.startLine - 1];","    if (group.name) {","      line.scope = group.name;","    } else if (group.parameters) {","      if (line.variables.variables) {","        line.scope = line.variables.variables.names.join('');","      } else {","        line.scope = 'anonymous function';","      }","    }","  });","}","","//examples of call expression users.find, console.log, invoking function","function ruler(parsed) {","  let lineActivity = {};","  Object.keys(parsed).forEach(type => {","    switch (type) {","      case 'BreakStatement':","      case 'ReturnStatement':","      case 'YieldExpression':","        lineRules.addLines(type, 'SWAP', parsed[type], lineActivity);","        break;","      case 'FunctionDeclaration':","      case 'FunctionExpression':","      case 'ArrowFunctionExpression':","      case 'SwitchCase':","        lineRules.addLines(type, 'SCOPE', parsed[type], lineActivity);","        lineRules.addVariables(parsed[type], lineActivity);","        lineRules.addScopeName(parsed[type], lineActivity);","        break;","      case 'VariableDeclaration':","        lineRules.addLines(type, null, parsed[type], lineActivity);","        lineRules.addVariables(parsed[type], lineActivity);","        break;","      case 'CallExpression':","      case 'SwitchStatement':","        lineRules.addLines(type, 'VOID', parsed[type], lineActivity);","        break;","      default:","        lineRules.addLines(type, 'SCOPE', parsed[type], lineActivity);","        break;","    }","  });","  return lineActivity;","}","","module.exports = lineRules;",""],"l":{"3":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"44":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"90":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"100":0,"107":1,"108":0,"109":0,"110":0,"114":0,"115":0,"120":0,"121":0,"122":0,"123":0,"125":0,"126":0,"127":0,"130":0,"131":0,"133":0,"134":0,"137":0,"140":1}},"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/lib/injector.js":{"path":"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/lib/injector.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"findScope","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":29}}},"2":{"name":"addVars","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":27}}},"3":{"name":"checkClosingLine","line":95,"loc":{"start":{"line":95,"column":0},"end":{"line":95,"column":46}}},"4":{"name":"findGlobalVars","line":127,"loc":{"start":{"line":127,"column":0},"end":{"line":127,"column":48}}},"5":{"name":"injector","line":148,"loc":{"start":{"line":148,"column":0},"end":{"line":148,"column":67}}},"6":{"name":"injectionEngine","line":218,"loc":{"start":{"line":218,"column":0},"end":{"line":218,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":24}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":51}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":10}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":16}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":24}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":21}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":14}},"9":{"start":{"line":30,"column":0},"end":{"line":48,"column":1}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":24}},"11":{"start":{"line":31,"column":17},"end":{"line":31,"column":24}},"12":{"start":{"line":32,"column":2},"end":{"line":47,"column":5}},"13":{"start":{"line":34,"column":4},"end":{"line":41,"column":5}},"14":{"start":{"line":35,"column":6},"end":{"line":39,"column":7}},"15":{"start":{"line":36,"column":8},"end":{"line":36,"column":35}},"16":{"start":{"line":38,"column":8},"end":{"line":38,"column":23}},"17":{"start":{"line":40,"column":6},"end":{"line":40,"column":32}},"18":{"start":{"line":43,"column":4},"end":{"line":46,"column":5}},"19":{"start":{"line":44,"column":6},"end":{"line":44,"column":18}},"20":{"start":{"line":45,"column":6},"end":{"line":45,"column":29}},"21":{"start":{"line":64,"column":0},"end":{"line":84,"column":1}},"22":{"start":{"line":65,"column":2},"end":{"line":65,"column":47}},"23":{"start":{"line":65,"column":40},"end":{"line":65,"column":47}},"24":{"start":{"line":66,"column":2},"end":{"line":66,"column":34}},"25":{"start":{"line":67,"column":2},"end":{"line":67,"column":46}},"26":{"start":{"line":68,"column":2},"end":{"line":71,"column":3}},"27":{"start":{"line":69,"column":4},"end":{"line":70,"column":56}},"28":{"start":{"line":72,"column":2},"end":{"line":83,"column":3}},"29":{"start":{"line":73,"column":4},"end":{"line":73,"column":21}},"30":{"start":{"line":74,"column":4},"end":{"line":76,"column":7}},"31":{"start":{"line":75,"column":6},"end":{"line":75,"column":38}},"32":{"start":{"line":75,"column":17},"end":{"line":75,"column":38}},"33":{"start":{"line":77,"column":4},"end":{"line":82,"column":5}},"34":{"start":{"line":78,"column":6},"end":{"line":78,"column":57}},"35":{"start":{"line":80,"column":6},"end":{"line":81,"column":63}},"36":{"start":{"line":95,"column":0},"end":{"line":109,"column":1}},"37":{"start":{"line":96,"column":2},"end":{"line":107,"column":3}},"38":{"start":{"line":97,"column":4},"end":{"line":104,"column":7}},"39":{"start":{"line":98,"column":6},"end":{"line":103,"column":7}},"40":{"start":{"line":98,"column":59},"end":{"line":98,"column":83}},"41":{"start":{"line":99,"column":11},"end":{"line":103,"column":7}},"42":{"start":{"line":100,"column":8},"end":{"line":100,"column":31}},"43":{"start":{"line":101,"column":13},"end":{"line":103,"column":7}},"44":{"start":{"line":102,"column":8},"end":{"line":102,"column":26}},"45":{"start":{"line":106,"column":4},"end":{"line":106,"column":75}},"46":{"start":{"line":108,"column":2},"end":{"line":108,"column":19}},"47":{"start":{"line":127,"column":0},"end":{"line":136,"column":1}},"48":{"start":{"line":128,"column":2},"end":{"line":135,"column":3}},"49":{"start":{"line":129,"column":4},"end":{"line":129,"column":25}},"50":{"start":{"line":130,"column":4},"end":{"line":130,"column":23}},"51":{"start":{"line":131,"column":4},"end":{"line":134,"column":5}},"52":{"start":{"line":133,"column":6},"end":{"line":133,"column":61}},"53":{"start":{"line":148,"column":0},"end":{"line":207,"column":1}},"54":{"start":{"line":149,"column":2},"end":{"line":149,"column":30}},"55":{"start":{"line":150,"column":2},"end":{"line":150,"column":31}},"56":{"start":{"line":151,"column":2},"end":{"line":151,"column":18}},"57":{"start":{"line":152,"column":2},"end":{"line":152,"column":22}},"58":{"start":{"line":153,"column":2},"end":{"line":153,"column":16}},"59":{"start":{"line":154,"column":2},"end":{"line":154,"column":24}},"60":{"start":{"line":155,"column":2},"end":{"line":155,"column":32}},"61":{"start":{"line":157,"column":2},"end":{"line":161,"column":3}},"62":{"start":{"line":158,"column":4},"end":{"line":158,"column":45}},"63":{"start":{"line":160,"column":4},"end":{"line":160,"column":28}},"64":{"start":{"line":162,"column":2},"end":{"line":166,"column":3}},"65":{"start":{"line":163,"column":4},"end":{"line":163,"column":32}},"66":{"start":{"line":165,"column":4},"end":{"line":165,"column":32}},"67":{"start":{"line":168,"column":2},"end":{"line":169,"column":69}},"68":{"start":{"line":171,"column":2},"end":{"line":174,"column":3}},"69":{"start":{"line":172,"column":4},"end":{"line":172,"column":49}},"70":{"start":{"line":173,"column":4},"end":{"line":173,"column":72}},"71":{"start":{"line":173,"column":28},"end":{"line":173,"column":72}},"72":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"73":{"start":{"line":177,"column":4},"end":{"line":177,"column":34}},"74":{"start":{"line":181,"column":2},"end":{"line":181,"column":20}},"75":{"start":{"line":182,"column":2},"end":{"line":195,"column":3}},"76":{"start":{"line":183,"column":4},"end":{"line":194,"column":7}},"77":{"start":{"line":184,"column":6},"end":{"line":186,"column":7}},"78":{"start":{"line":185,"column":8},"end":{"line":185,"column":31}},"79":{"start":{"line":187,"column":6},"end":{"line":190,"column":7}},"80":{"start":{"line":188,"column":8},"end":{"line":188,"column":32}},"81":{"start":{"line":189,"column":8},"end":{"line":189,"column":25}},"82":{"start":{"line":191,"column":6},"end":{"line":193,"column":7}},"83":{"start":{"line":192,"column":8},"end":{"line":192,"column":41}},"84":{"start":{"line":196,"column":2},"end":{"line":206,"column":3}},"85":{"start":{"line":197,"column":4},"end":{"line":197,"column":24}},"86":{"start":{"line":198,"column":9},"end":{"line":206,"column":3}},"87":{"start":{"line":199,"column":4},"end":{"line":199,"column":35}},"88":{"start":{"line":200,"column":9},"end":{"line":206,"column":3}},"89":{"start":{"line":201,"column":4},"end":{"line":201,"column":46}},"90":{"start":{"line":202,"column":9},"end":{"line":206,"column":3}},"91":{"start":{"line":203,"column":4},"end":{"line":203,"column":35}},"92":{"start":{"line":205,"column":4},"end":{"line":205,"column":35}},"93":{"start":{"line":218,"column":0},"end":{"line":250,"column":1}},"94":{"start":{"line":219,"column":2},"end":{"line":219,"column":24}},"95":{"start":{"line":220,"column":2},"end":{"line":220,"column":31}},"96":{"start":{"line":221,"column":2},"end":{"line":221,"column":32}},"97":{"start":{"line":222,"column":2},"end":{"line":222,"column":23}},"98":{"start":{"line":223,"column":2},"end":{"line":223,"column":27}},"99":{"start":{"line":224,"column":2},"end":{"line":224,"column":26}},"100":{"start":{"line":225,"column":2},"end":{"line":225,"column":17}},"101":{"start":{"line":227,"column":2},"end":{"line":227,"column":37}},"102":{"start":{"line":229,"column":2},"end":{"line":232,"column":16}},"103":{"start":{"line":234,"column":2},"end":{"line":240,"column":5}},"104":{"start":{"line":235,"column":4},"end":{"line":239,"column":5}},"105":{"start":{"line":238,"column":6},"end":{"line":238,"column":40}},"106":{"start":{"line":241,"column":2},"end":{"line":247,"column":5}},"107":{"start":{"line":243,"column":4},"end":{"line":243,"column":57}},"108":{"start":{"line":244,"column":4},"end":{"line":244,"column":24}},"109":{"start":{"line":245,"column":4},"end":{"line":245,"column":22}},"110":{"start":{"line":246,"column":4},"end":{"line":246,"column":100}},"111":{"start":{"line":248,"column":2},"end":{"line":248,"column":38}},"112":{"start":{"line":249,"column":2},"end":{"line":249,"column":22}},"113":{"start":{"line":253,"column":0},"end":{"line":253,"column":33}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":29}},{"start":{"line":34,"column":33},"end":{"line":34,"column":56}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"6":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":29}},{"start":{"line":43,"column":33},"end":{"line":43,"column":54}}]},"7":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"8":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":15}},{"start":{"line":65,"column":19},"end":{"line":65,"column":38}}]},"9":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"10":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"11":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]},"12":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"13":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":8},"end":{"line":77,"column":37}},{"start":{"line":77,"column":41},"end":{"line":77,"column":77}}]},"14":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"15":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":6},"end":{"line":98,"column":6}},{"start":{"line":98,"column":6},"end":{"line":98,"column":6}}]},"16":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":10},"end":{"line":98,"column":33}},{"start":{"line":98,"column":37},"end":{"line":98,"column":57}}]},"17":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":11},"end":{"line":99,"column":11}},{"start":{"line":99,"column":11},"end":{"line":99,"column":11}}]},"18":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":15},"end":{"line":99,"column":38}},{"start":{"line":99,"column":42},"end":{"line":99,"column":63}}]},"19":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":13},"end":{"line":101,"column":13}},{"start":{"line":101,"column":13},"end":{"line":101,"column":13}}]},"20":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":17},"end":{"line":101,"column":38}},{"start":{"line":101,"column":43},"end":{"line":101,"column":63}},{"start":{"line":101,"column":67},"end":{"line":101,"column":88}}]},"21":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"22":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"23":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":8},"end":{"line":131,"column":39}},{"start":{"line":131,"column":43},"end":{"line":131,"column":70}}]},"24":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":2},"end":{"line":157,"column":2}},{"start":{"line":157,"column":2},"end":{"line":157,"column":2}}]},"25":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":6},"end":{"line":157,"column":32}},{"start":{"line":157,"column":36},"end":{"line":157,"column":69}}]},"26":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"27":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":171,"column":2}},{"start":{"line":171,"column":2},"end":{"line":171,"column":2}}]},"28":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"29":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"30":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"31":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":6}},{"start":{"line":184,"column":6},"end":{"line":184,"column":6}}]},"32":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":10},"end":{"line":184,"column":30}},{"start":{"line":184,"column":34},"end":{"line":184,"column":57}}]},"33":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":6},"end":{"line":187,"column":6}},{"start":{"line":187,"column":6},"end":{"line":187,"column":6}}]},"34":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":10},"end":{"line":187,"column":30}},{"start":{"line":187,"column":34},"end":{"line":187,"column":57}}]},"35":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":6}},{"start":{"line":191,"column":6},"end":{"line":191,"column":6}}]},"36":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":10},"end":{"line":191,"column":31}},{"start":{"line":191,"column":35},"end":{"line":191,"column":58}}]},"37":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"38":{"line":196,"type":"binary-expr","locations":[{"start":{"line":196,"column":7},"end":{"line":196,"column":17}},{"start":{"line":196,"column":21},"end":{"line":196,"column":32}},{"start":{"line":196,"column":36},"end":{"line":196,"column":47}},{"start":{"line":196,"column":52},"end":{"line":196,"column":68}}]},"39":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":9},"end":{"line":198,"column":9}},{"start":{"line":198,"column":9},"end":{"line":198,"column":9}}]},"40":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":13},"end":{"line":198,"column":29}},{"start":{"line":198,"column":33},"end":{"line":198,"column":58}}]},"41":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":9},"end":{"line":200,"column":9}},{"start":{"line":200,"column":9},"end":{"line":200,"column":9}}]},"42":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":9},"end":{"line":202,"column":9}},{"start":{"line":202,"column":9},"end":{"line":202,"column":9}}]},"43":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":4}},{"start":{"line":235,"column":4},"end":{"line":235,"column":4}}]}},"code":["'use strict';","","const decomment = require('decomment');","const injectionLog = {};","const flattenDeep = require('./tools').flattenDeep;","let scope;","let injectCheck;","let specialVariablesLog;","let specialVariables;","let variables;","","/**","* Function finds the scope of an object describing the current line of code","* If it creates a new scope, then it adds an array of the current level to the {@link #specialVariables} object","* If it closes a scope, then it pops the last array off of the {@link #specialVariables} object","","* going through all the lines of code and corresponding rules","* if there is rule called scope we push the scope name to the scope array to keep track of scopes","* some lines of code wont have rules because we only care about if something is being declared - so if something like","* var a = 0, b = 1, x = 5;","* a = b + x wont have rule because a is just being reassigned a new value. so it'll just getting monitoring code injected after it","* we loop over the rulesfound array which an array of object(s). the object looks like { action: 'START or END', rule: 'SCOPE', type: 'SwitchCase' }","* if there is a rule called scope and start action, we'll check if lineInfo has a property called scope - if it does we know its some sort of block statement","if there is a block scope we push an empty array into the special variables array","* @param {object} lineInfo - the rules we created for the line of code being analyzed","* @event #specialVariables .push() or .pop()","* @returns {undefined} - undefined - this builds an external value","**/","","function findScope(lineInfo) {","  if (!lineInfo) return;","  lineInfo.rulesFound.forEach(rule => {","    // if there is scope, we are creating a new array for it in case there are variables declared inside the block statement","    if (rule.rule === 'SCOPE' && rule.action === 'START') {","      if (lineInfo.scope) {","        scope.push(lineInfo.scope);","      } else {","        scope.push('');","      }","      specialVariables.push([]);","    }","    // if the rule is scope, then we get rid of the last thing in the special variables array like a stack","    if (rule.rule === 'SCOPE' && rule.action === 'END') {","      scope.pop();","      specialVariables.pop();","    }","  });","}","","/**","* Function looks at an object describing a line of Javascript","* and adds the variables found there to the scope within which that line executes","* some lines of code dont have rules because all we care about are things being declared. so assignment expressions dont need rules","* this function is being called right after findscope so if there are parameters in the current lineInfo those parameters","* gets added to the special variables array","* scope is an array that keeps track of what scope were in. it will always have mintyglobalscope as 0th index","* if there are global variables we'll be adding them to the variables array","* if there are global variables but scoped, they are added to the special variables array","* @param {object} lineInfo - the rules associated with the line of code being analyzed","* @event add variables to {@link #specialVariables}","* @event add variables to {@link #variables}","* @returns {undefined} - undefined - this builds an external value","**/","function addVars(lineInfo) {","  if (!lineInfo || !lineInfo.variables) return;","  const line = lineInfo.variables;","  const lastIdx = specialVariables.length - 1;","  if (line.parameters) {","    specialVariables[lastIdx] =","      specialVariables[lastIdx].concat(line.parameters);","  }","  if (line.variables) {","    let currentScope;","    scope.forEach(block => {","      if (block) currentScope = block;","    });","    if (line.variables.kind === 'var' && currentScope === '_mintyGlobalScope') {","      variables = variables.concat(line.variables.names);","    } else {","      specialVariables[lastIdx] =","        specialVariables[lastIdx].concat(line.variables.names);","    }","  }","}","","/**","* Function looks at an object describing a line of Javascript","* and reviews if it has triggered rules that end a scope.","* If it has triggered those rules, then it updates the {@link #injectCheck} array","* to add a flag to inject watching code; remove a flag; or flag to not inject","* @param {object} lineInfo - the line of code being analyzed","* @event add true or false, or pop the last item from, {@link #specialVariables}","* @returns {undefined} - undefined - this builds an external value","**/","function checkClosingLine(lineInfo, lineText) {","  if (lineInfo) {","    lineInfo.rulesFound.forEach(rule => {","      if (rule.action === 'START' && rule.rule === 'VOID') injectCheck.push(false);","      else if (rule.action === 'START' && rule.rule === 'SCOPE') {","        injectCheck.push(true);","      } else if (rule.action === 'END' && (rule.rule === 'VOID' || rule.rule === 'SCOPE')) {","        injectCheck.pop();","      }","    });","    // checking if a line is closing brace","    return lineText.trim() === lineText.trim().replace(/[A-Za-z0-9]/g, '');","  }","  return undefined;","}","","/**","* Function looks at a line, evaluates it against rules, and sees if it contains global variables","* inject check at last index has a value true or false","* specialVariables is the array of nested arrays keeping track of scoped variables - arrays have values of the variables names in them","* specialVariablesLog - adding the vaiebls","* @param {object} lineRules - rules created for each corresponding line of code user provides '25':","   { rulesFound: [ [Object] ],","     variables: { variables: [Object], parameters: [Object] },","     scope: 'ted' },","* @param {string} line - the line of code","* @param {number} index - the 0-based line number, index of the array when findGlobalVars is called","* @event trigger {@link #findScope} on the lineRules","* @event trigger {@link #addVars} on the lineRules","* @event add the special (local to this block) variables to the {@link #specialVariablesLog}","* @returns {undefined} - undefined - this builds an external value","**/","function findGlobalVars(lineRules, line, index) {","  if (injectCheck[injectCheck.length - 1]) {","    findScope(lineRules);","    addVars(lineRules);","    if (specialVariables[0].length >= 1 || specialVariables.length > 1) {","      // slice makes shallow copy of specialVariables array - specialVariables is constantly changing - if we dont use shallow copy, in the end","      specialVariablesLog[index] = specialVariables.slice(0);","    }","  }","}","/**","* Function injects monitoring code into appropriate lines of the source JS","* @param {array} log - Running log of original code + injected code.","* @param {string} line - the original line of code","* @param {number} index - the 0-based line number","* @param {boolean} check - a flag to prevent or allow injection - true false","* @param {object} lineRules - an object of rules, variables names, scope that define where the monitoring code should be injected - values for rulesfound property: [SWAP, START, VOID, SCOPE],","* @param {number} closingLine - the 1-based line number on which the statement closes","* @event trigger adds line to the {@link #log} variable which will be turned back into a file and executed","* @returns {true, false or undefined} - undefined - this builds an external value","**/","function injector(log, line, index, check, lineRules, closingLine) {","  let returnStatement = false;","  let preVoidStatement = false;","  let lineSpecial;","  let globalVariables;","  let mintyLine;","  let lineCheck = check;","  let callExpressionAndCallback;","","  if (specialVariablesLog[index] && specialVariablesLog[index].length) {","    lineSpecial = specialVariablesLog[index];","  } else {","    lineSpecial = undefined;","  }","  if (variables.length) {","    globalVariables = variables;","  } else {","    globalVariables = undefined;","  }","","  mintyLine = `mintyLog(${index}, '${JSON.stringify(scope)}',`","    + `${JSON.stringify(lineSpecial)}, ${JSON.stringify(variables)}`;","","  if (lineSpecial) {","    const flatSpecial = flattenDeep(lineSpecial);","    if (flatSpecial.length) mintyLine += `,${flattenDeep(lineSpecial)}`;","  }","","  if (globalVariables) {","    mintyLine += `, ${variables}`;","  }","","","  mintyLine += ');';","  if (lineRules) {","    lineRules.rulesFound.forEach(rule => {","      if (rule.rule === 'SWAP' && rule.action === 'START') {","        returnStatement = true;","      }","      if (rule.rule === 'VOID' && rule.action === 'START') {","        preVoidStatement = true;","        lineCheck = true;","      }","      if (rule.rule === 'SCOPE' && rule.action === 'START') {","        callExpressionAndCallback = true;","      }","    });","  }","  if ((!lineCheck || closingLine || line === '') && !returnStatement) {","    log.push(`${line}`);","  } else if (preVoidStatement && callExpressionAndCallback) {","    log.push(`${line}`, mintyLine);","  } else if (returnStatement) {","    log.push(mintyLine, `${line}`, mintyLine);","  } else if (preVoidStatement) {","    log.push(mintyLine, `${line}`);","  } else {","    log.push(`${line}`, mintyLine);","  }","}","","/**","* Function parses the given text with the given rules","* special variables start out with a nested empty array","* parsing code for all the global variables in the first foreach call","* @param {line activity object we built up in createLineRules.js} rules - The rules the code should be parsed with","* @param {string} text - the original code","* @returns {array} - an array of all of the lines of code, with the necessary","*                    injection code as well, for later execution","**/","function injectionEngine(rules, text) {","  injectionLog.log = [];","  injectionLog.globalVars = [];","  scope = ['_mintyGlobalScope'];","  injectCheck = [true];","  specialVariablesLog = {};","  specialVariables = [[]];","  variables = [];","  // EOL = End of Line - the correct line carriage: \\n for Unix and \\r\\n for Windows","  const EOL = decomment.getEOL(text);","  // textArray is the user's code but formatted as an array - each line is an index of the array","  const textArray = decomment(text, {","    space: true,","  })","    .split(EOL);","","  textArray.forEach((line, i) => {","    if (line !== '') {","      // passing in each line of code and its corresponding rule, and the index","      // some rules will be undefined bc some lines are empty","      findGlobalVars(rules[i], line, i);","    }","  });","  textArray.forEach((line, i) => {","    // closingLine will have value true false or undefined","    const closingLine = checkClosingLine(rules[i], line);","    findScope(rules[i]);","    addVars(rules[i]);","    injector(injectionLog.log, line, i, injectCheck[injectCheck.length - 1], rules[i], closingLine);","  });","  injectionLog.globalVars = variables;","  return injectionLog;","}","","","module.exports = injectionEngine;",""],"l":{"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"30":1,"31":0,"32":0,"34":0,"35":0,"36":0,"38":0,"40":0,"43":0,"44":0,"45":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"72":0,"73":0,"74":0,"75":0,"77":0,"78":0,"80":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"106":0,"108":0,"127":1,"128":0,"129":0,"130":0,"131":0,"133":0,"148":1,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"157":0,"158":0,"160":0,"162":0,"163":0,"165":0,"168":0,"171":0,"172":0,"173":0,"176":0,"177":0,"181":0,"182":0,"183":0,"184":0,"185":0,"187":0,"188":0,"189":0,"191":0,"192":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"205":0,"218":1,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"227":0,"229":0,"234":0,"235":0,"238":0,"241":0,"243":0,"244":0,"245":0,"246":0,"248":0,"249":0,"253":1}},"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/lib/tools.js":{"path":"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/lib/tools.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"flattenDeep","line":5,"loc":{"start":{"line":5,"column":20},"end":{"line":5,"column":48}}},"2":{"name":"anonFuncCheck","line":22,"loc":{"start":{"line":22,"column":22},"end":{"line":22,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":17}},"2":{"start":{"line":5,"column":0},"end":{"line":19,"column":2}},"3":{"start":{"line":6,"column":2},"end":{"line":17,"column":3}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":26}},"5":{"start":{"line":8,"column":4},"end":{"line":15,"column":5}},"6":{"start":{"line":9,"column":6},"end":{"line":9,"column":31}},"7":{"start":{"line":10,"column":6},"end":{"line":14,"column":7}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":65}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":35}},"10":{"start":{"line":16,"column":4},"end":{"line":16,"column":24}},"11":{"start":{"line":18,"column":2},"end":{"line":18,"column":19}},"12":{"start":{"line":22,"column":0},"end":{"line":28,"column":2}},"13":{"start":{"line":23,"column":2},"end":{"line":26,"column":3}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":70}},"15":{"start":{"line":25,"column":4},"end":{"line":25,"column":25}},"16":{"start":{"line":27,"column":2},"end":{"line":27,"column":16}},"17":{"start":{"line":30,"column":0},"end":{"line":30,"column":23}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":6,"column":2}},{"start":{"line":6,"column":2},"end":{"line":6,"column":2}}]},"2":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":6},"end":{"line":10,"column":6}},{"start":{"line":10,"column":6},"end":{"line":10,"column":6}}]},"3":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]}},"code":["'use strict';","","const tools = {};","","tools.flattenDeep = function flattenDeep(array) {","  if (array) {","    let flattenArray = [];","    for (let i = 0; i < array.length; i++) {","      const element = array[i];","      if (element.constructor === Array) {","        flattenArray = flattenArray.concat(flattenDeep(element));","      } else {","        flattenArray.push(element);","      }","    }","    return flattenArray;","  }","  return undefined;","};","","","tools.anonFuncCheck = function anonFuncCheck(jsText) {","  if (jsText[9] === '(') {","    const namedAnonFunc = jsText.replace(jsText[8], ' anonymousFunc');","    return namedAnonFunc;","  }","  return jsText;","};","","module.exports = tools;",""],"l":{"3":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"13":0,"16":0,"18":0,"22":1,"23":0,"24":0,"25":0,"27":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/lib/run.js":{"path":"/home/travis/build/npmtest/node-npmtest-minty/node_modules/minty/lib/run.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"mintyLog","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":57}}},"2":{"name":"variableAdd","line":23,"loc":{"start":{"line":23,"column":2},"end":{"line":23,"column":34}}},"3":{"name":"errorLineFind","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":39}}},"4":{"name":"finalizeOutput","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":35}}},"5":{"name":"finalizeRun","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":35}}},"6":{"name":"errorHandler","line":102,"loc":{"start":{"line":102,"column":0},"end":{"line":102,"column":35}}},"7":{"name":"runFile","line":114,"loc":{"start":{"line":114,"column":0},"end":{"line":114,"column":50}}},"8":{"name":"wrap","line":137,"loc":{"start":{"line":137,"column":0},"end":{"line":137,"column":38}}},"9":{"name":"(anonymous_9)","line":144,"loc":{"start":{"line":144,"column":9},"end":{"line":144,"column":20}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":41}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":49}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":13}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":8}},"7":{"start":{"line":12,"column":0},"end":{"line":46,"column":1}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":56}},"9":{"start":{"line":14,"column":2},"end":{"line":22,"column":4}},"10":{"start":{"line":23,"column":2},"end":{"line":40,"column":3}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":23}},"12":{"start":{"line":25,"column":4},"end":{"line":39,"column":5}},"13":{"start":{"line":26,"column":6},"end":{"line":32,"column":7}},"14":{"start":{"line":27,"column":8},"end":{"line":27,"column":39}},"15":{"start":{"line":28,"column":8},"end":{"line":31,"column":11}},"16":{"start":{"line":29,"column":10},"end":{"line":29,"column":67}},"17":{"start":{"line":30,"column":10},"end":{"line":30,"column":28}},"18":{"start":{"line":34,"column":6},"end":{"line":38,"column":7}},"19":{"start":{"line":35,"column":8},"end":{"line":35,"column":66}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":26}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":27}},"22":{"start":{"line":42,"column":2},"end":{"line":42,"column":34}},"23":{"start":{"line":43,"column":2},"end":{"line":43,"column":35}},"24":{"start":{"line":45,"column":2},"end":{"line":45,"column":26}},"25":{"start":{"line":48,"column":0},"end":{"line":67,"column":1}},"26":{"start":{"line":49,"column":2},"end":{"line":49,"column":20}},"27":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"28":{"start":{"line":51,"column":4},"end":{"line":51,"column":51}},"29":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"30":{"start":{"line":54,"column":2},"end":{"line":54,"column":24}},"31":{"start":{"line":55,"column":2},"end":{"line":65,"column":5}},"32":{"start":{"line":56,"column":4},"end":{"line":56,"column":26}},"33":{"start":{"line":56,"column":19},"end":{"line":56,"column":26}},"34":{"start":{"line":57,"column":4},"end":{"line":64,"column":5}},"35":{"start":{"line":58,"column":6},"end":{"line":58,"column":51}},"36":{"start":{"line":59,"column":6},"end":{"line":63,"column":7}},"37":{"start":{"line":60,"column":8},"end":{"line":60,"column":32}},"38":{"start":{"line":61,"column":8},"end":{"line":61,"column":43}},"39":{"start":{"line":62,"column":8},"end":{"line":62,"column":25}},"40":{"start":{"line":66,"column":2},"end":{"line":66,"column":17}},"41":{"start":{"line":69,"column":0},"end":{"line":75,"column":1}},"42":{"start":{"line":70,"column":2},"end":{"line":74,"column":5}},"43":{"start":{"line":71,"column":4},"end":{"line":71,"column":54}},"44":{"start":{"line":71,"column":29},"end":{"line":71,"column":54}},"45":{"start":{"line":72,"column":4},"end":{"line":72,"column":52}},"46":{"start":{"line":72,"column":28},"end":{"line":72,"column":52}},"47":{"start":{"line":73,"column":4},"end":{"line":73,"column":17}},"48":{"start":{"line":78,"column":0},"end":{"line":100,"column":1}},"49":{"start":{"line":79,"column":2},"end":{"line":79,"column":24}},"50":{"start":{"line":80,"column":2},"end":{"line":80,"column":26}},"51":{"start":{"line":81,"column":2},"end":{"line":99,"column":5}},"52":{"start":{"line":82,"column":4},"end":{"line":98,"column":7}},"53":{"start":{"line":83,"column":6},"end":{"line":83,"column":90}},"54":{"start":{"line":84,"column":6},"end":{"line":84,"column":122}},"55":{"start":{"line":85,"column":6},"end":{"line":85,"column":120}},"56":{"start":{"line":86,"column":6},"end":{"line":86,"column":111}},"57":{"start":{"line":87,"column":6},"end":{"line":87,"column":111}},"58":{"start":{"line":88,"column":6},"end":{"line":88,"column":99}},"59":{"start":{"line":89,"column":6},"end":{"line":89,"column":101}},"60":{"start":{"line":90,"column":6},"end":{"line":90,"column":93}},"61":{"start":{"line":91,"column":6},"end":{"line":94,"column":110}},"62":{"start":{"line":95,"column":6},"end":{"line":97,"column":9}},"63":{"start":{"line":96,"column":8},"end":{"line":96,"column":36}},"64":{"start":{"line":96,"column":18},"end":{"line":96,"column":36}},"65":{"start":{"line":102,"column":0},"end":{"line":112,"column":1}},"66":{"start":{"line":103,"column":2},"end":{"line":103,"column":43}},"67":{"start":{"line":104,"column":2},"end":{"line":104,"column":79}},"68":{"start":{"line":105,"column":2},"end":{"line":111,"column":5}},"69":{"start":{"line":114,"column":0},"end":{"line":135,"column":1}},"70":{"start":{"line":115,"column":2},"end":{"line":115,"column":41}},"71":{"start":{"line":116,"column":2},"end":{"line":116,"column":11}},"72":{"start":{"line":117,"column":2},"end":{"line":117,"column":57}},"73":{"start":{"line":118,"column":2},"end":{"line":134,"column":3}},"74":{"start":{"line":119,"column":4},"end":{"line":121,"column":13}},"75":{"start":{"line":123,"column":4},"end":{"line":123,"column":274}},"76":{"start":{"line":124,"column":4},"end":{"line":124,"column":32}},"77":{"start":{"line":126,"column":4},"end":{"line":129,"column":6}},"78":{"start":{"line":130,"column":4},"end":{"line":130,"column":36}},"79":{"start":{"line":131,"column":4},"end":{"line":131,"column":46}},"80":{"start":{"line":132,"column":4},"end":{"line":132,"column":36}},"81":{"start":{"line":133,"column":4},"end":{"line":133,"column":60}},"82":{"start":{"line":137,"column":0},"end":{"line":163,"column":1}},"83":{"start":{"line":138,"column":2},"end":{"line":138,"column":22}},"84":{"start":{"line":139,"column":2},"end":{"line":139,"column":11}},"85":{"start":{"line":140,"column":2},"end":{"line":142,"column":34}},"86":{"start":{"line":143,"column":2},"end":{"line":143,"column":41}},"87":{"start":{"line":144,"column":2},"end":{"line":162,"column":4}},"88":{"start":{"line":145,"column":4},"end":{"line":145,"column":55}},"89":{"start":{"line":146,"column":4},"end":{"line":160,"column":5}},"90":{"start":{"line":147,"column":6},"end":{"line":147,"column":37}},"91":{"start":{"line":148,"column":6},"end":{"line":148,"column":45}},"92":{"start":{"line":150,"column":6},"end":{"line":150,"column":276}},"93":{"start":{"line":151,"column":6},"end":{"line":151,"column":34}},"94":{"start":{"line":153,"column":6},"end":{"line":156,"column":8}},"95":{"start":{"line":157,"column":6},"end":{"line":157,"column":38}},"96":{"start":{"line":158,"column":6},"end":{"line":158,"column":48}},"97":{"start":{"line":159,"column":6},"end":{"line":159,"column":42}},"98":{"start":{"line":161,"column":4},"end":{"line":161,"column":27}},"99":{"start":{"line":166,"column":0},"end":{"line":169,"column":2}},"100":{"start":{"line":171,"column":0},"end":{"line":171,"column":21}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"2":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"3":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"5":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"6":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"8":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":96,"column":8}},{"start":{"line":96,"column":8},"end":{"line":96,"column":8}}]},"9":{"line":104,"type":"cond-expr","locations":[{"start":{"line":104,"column":31},"end":{"line":104,"column":60}},{"start":{"line":104,"column":63},"end":{"line":104,"column":78}}]}},"code":["'use strict';","","const _eval = require('eval');","const fs = require('fs');","const appRoot = require('app-root-path');","const stringify = require('json-stringify-safe');","","let filename;","let log;","","","function mintyLog(lineNumber, scope, special, variables) {","  const args = Array.prototype.slice.call(arguments, 4);","  const retObj = {","    file: filename,","    line: lineNumber,","    variables: {","      special: {},","      global: {},","    },","    scope,","  };","  function variableAdd(type, key) {","    const array = type;","    if (key === 'special') {","      for (const el in type) {","        retObj.variables[key][el] = {};","        type[el].forEach(val => {","          retObj.variables[key][el][val] = JSON.stringify(args[0]);","          args.splice(0, 1);","        });","      }","    } else {","      while (array.length) {","        retObj.variables[key][array[0]] = JSON.stringify(args[0]);","        args.splice(0, 1);","        array.splice(0, 1);","      }","    }","  }","","  variableAdd(special, 'special');","  variableAdd(variables, 'global');","  // return object into results array","  return log.push(retObj);","}","","function errorLineFind(text, finalLog) {","  let finalLine = 0;","  if (finalLog.length) {","    finalLine = finalLog[finalLog.length - 1].line;","  }","  const errInfo = {};","  let completed = false;","  text.log.forEach(line => {","    if (completed) return;","    if (line.indexOf('mintyLog') !== -1) {","      const currLine = parseInt(line.slice(9), 10);","      if (currLine > finalLine) {","        errInfo.line = currLine;","        errInfo.scope = line.split(',')[1];","        completed = true;","      }","    }","  });","  return errInfo;","}","","function finalizeOutput(outputObj) {","  return stringify(outputObj, (key, value) => {","    if (value === undefined) return '_mintyUndefined';","    if (value === Function) return value.toString();","    return value;","  });","}","","","function finalizeRun(output, type) {","  const name = filename;","  const date = new Date();","  fs.mkdir(appRoot + '/minty', () => {","    fs.mkdir(appRoot + `/minty/${type}`, () => {","      const jquery = fs.readFileSync(appRoot + '/node_modules/jquery/dist/jquery.min.js');","      const normalizeCss = fs.readFileSync(appRoot + '/node_modules/minty/lib/mintyTemplates/skeleton/css/normalize.css');","      const skeletonCss = fs.readFileSync(appRoot + '/node_modules/minty/lib/mintyTemplates/skeleton/css/skeleton.css');","      const template = fs.readFileSync(appRoot + '/node_modules/minty/lib/mintyTemplates/mintyVisTemplate.js');","      const beginningHtml = fs.readFileSync(appRoot + '/node_modules/minty/lib/mintyTemplates/beginning.html');","      const endHtml = fs.readFileSync(appRoot + '/node_modules/minty/lib/mintyTemplates/end.html');","      const bodyHtml = fs.readFileSync(appRoot + '/node_modules/minty/lib/mintyTemplates/body.html');","      const viz = fs.readFileSync(appRoot + '/node_modules/minty/lib/mintyTemplates/viz.js');","      const insert = `${beginningHtml} \\n <script type=\"text/javascript\"> \\n ${jquery} \\n </script> \\n <style>`","        + `\\n ${normalizeCss} \\n </style> \\n <style> \\n ${skeletonCss} \\n </style> \\n ${bodyHtml} \\n`","        + `<script>${viz}</script>\\n`","        + `<script type=\"text/javascript\"> \\n var data = ${output} \\n ${template} \\n </script> \\n ${endHtml}`;","      fs.writeFile(appRoot + `/minty/${type}/${name}_${date.toString().replace(/\\s+/gm, '_').replace(/:+/gm, '-')}.html`, insert, (err3) => {","        if (err3) console.log(err3);","      });","    });","  });","}","","function errorHandler(error, text) {","  const errInfo = errorLineFind(text, log);","  const errVars = log.length ? log[log.length - 2].variables : text.globalVars;","  log.push({","    file: filename,","    line: errInfo.line,","    scope: JSON.stringify([errInfo.scope]),","    error: error.message,","    variables: errVars,","  });","}","","function runFile(fileText, absPath, originalText) {","  const fileJS = fileText.log.join('\\n');","  log = [];","  filename = absPath.slice(absPath.lastIndexOf('/') + 1);","  try {","    _eval(fileJS, filename, {","      mintyLog: mintyLog,","    }, true);","  } catch (err) {","    console.log(`\\n\\n#################################################################################\\nMinty has found an error! Please check the out put of ${filename} for more details\\n#################################################################################\\n`);","    errorHandler(err, fileText);","  } finally {","    const output = {","      entry: filename,","      log: log,","    };","    output[filename] = originalText;","    const fileOutput = finalizeOutput(output);","    finalizeRun(fileOutput, 'file');","    console.log(`Minty has finished analyzing ${filename}`);","  }","}","","function wrap(wrapText, originalText) {","  let returnStatement;","  log = [];","  filename = wrapText.log[1]","    .split(',')[2]","    .replace(/\\s+|\\]|\\'|\\\"/g, '');","  const wrapJS = wrapText.log.join('\\n');","  return function() {","    const args = Array.prototype.slice.call(arguments);","    try {","      const fn = eval(`(${wrapJS})`);","      returnStatement = fn.apply(null, args);","    } catch (err) {","      console.log(`\\n\\n#################################################################################\\nMinty has found an error! Please check the out put of ${filename} for more details\\n#################################################################################\\n`);","      errorHandler(err, wrapText);","    } finally {","      const output = {","        entry: filename,","        log: log,","      };","      output[filename] = originalText;","      const wrapOutput = finalizeOutput(output);","      finalizeRun(wrapOutput, 'function');","    }","    return returnStatement;","  };","}","","","const run = {","  runFile: runFile,","  wrap: wrap,","};","","module.exports = run;",""],"l":{"3":1,"4":1,"5":1,"6":1,"8":1,"9":1,"12":1,"13":0,"14":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"34":0,"35":0,"36":0,"37":0,"42":0,"43":0,"45":0,"48":1,"49":0,"50":0,"51":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"66":0,"69":1,"70":0,"71":0,"72":0,"73":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"95":0,"96":0,"102":1,"103":0,"104":0,"105":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"123":0,"124":0,"126":0,"130":0,"131":0,"132":0,"133":0,"137":1,"138":0,"139":0,"140":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"150":0,"151":0,"153":0,"157":0,"158":0,"159":0,"161":0,"166":1,"171":1}}}